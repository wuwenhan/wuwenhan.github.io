---
layout: post
title:  "git回滚远程版本"
date:   2016-04-09 21:22:46
categories: wuwenhan update
---

使用git管理项目开发的过程中经常会碰到这种情况：某次提交已经push到了远程仓库，可是突然意识到“天哪，我怎么做了这么蠢的事情”。那么问题来了，怎么将远程代码库回滚呢？

在网上看到大部分人给出的解决方案是先将本地回滚，然后删除远程分支，之后再将本地的分支push到远程仓库，这其实是一种很危险的方案，毕竟直接删除远程分支太狠了，不推荐这样做。。。


### 1、删除最后一次提交

这种情况是最简单的了，只需要以下两步就可以了

```sh
git revert HEAD
git push origin master
```
注意，revert和reset的区别:

revert是放弃指定提交的修改，但是会生成一次新的提交，需要填写提交注释，以前的历史记录都在，而reset是指将HEAD指针指到指定提交，历史记录中不会出现放弃的提交记录。


```sh
git revert HEAD
git log
```
历史记录中还有第三次提交的记录，并且多了一次的提交，但是仓库内容已经回到了第二次提交之后的状态

```sh
git reset --hard HEAD^
git log
```
历史记录中已经没有之前revert生成的提交记录了，现在应该明白了吧。


### 2、删除历史某次提交

这种情况需要先用git log命令在历史记录中查找到想要删除的某次提交的commit id

然后执行以下命令（"commit id"替换为想要删除的提交的"commit id"，需要注意最后的^号，意思是commit id的前一次提交）

```sh
git rebase -i "commit id"^
```
执行该条命令之后会打开一个编辑框，列出了包含该次提交在内之后的所有提交

然后在编辑框中删除你想要删除的提交所在行，然后保存退出就好啦，如果有冲突的需要解决冲突。接下来，执行以下命令，将本地仓库提交到远程库就完成了：

```sh
git push origin master -f
```

### 3、修改历史某次提交

这种情况的解决方法类似于第二种情况，只需要在第二条打开编辑框之后，将你想要修改的提交所在行的pick替换成edit然后保存退出，这个时候rebase会停在你要修改的提交，然后做你需要的修改，修改完毕之后，执行以下命令：

```sh
git add .
git commit --amend
git rebase --continue
```
如果你在之前的编辑框修改了n行，也就是说要对n次提交做修改，则需要重复执行以上步骤n次。

需要注意的是，在执行rebase命令对指定提交修改或删除之后，该次提交之后的所有提交的"commit id"都会改变。
